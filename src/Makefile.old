# /usr/lib/ccache speed up compiling time in case of frequent rebuilds
DOMAIN					=	timecard.su
G++						=	g++
GCC						=	gcc
ROOTDIR					=	/home/httpd/dev.$(DOMAIN)
IMAGEROOTDIR			=	/home/httpd/devimages.$(DOMAIN)
CGIDIR					=	$(ROOTDIR)/cgi-bin
CGIADMINDIR 			= 	$(CGIDIR)/admin
LOGDIR					=	/home/ikuchin/src_logs/

# !!! very carefull !!!
# !!! 'make uninstall' removes SYSTEMDIR recursively
SYSTEMDIR				=	/usr/share/$(DOMAIN)

# cron doesn't allow any symbols other than [0-9a-z] in a filename
CRON_FNAME				=	`echo $(DOMAIN) | tr . _`

# this block required for backup/restore operations in archive.pl
HTMLDIR					=	$(ROOTDIR)/html/
TIMESTAMP				=	$(shell /bin/date "+%Y/%m/%d %H:%M:%S")

# -DMAXMIND_DISABLE - to disable maxmind
# -DFFPMPEG_DISABLE - to disable ffmpeg
# -DIMAGEMAGICK_DISABLE - to disable ImageMagick
DEFINITIONS 			= 	-DROOTDIR=\"$(ROOTDIR)\" -DIMAGEROOTDIR=\"$(IMAGEROOTDIR)\" -DLOGDIR=\"$(LOGDIR)\" -DLINUX
INCDIR					=	-I ./include -I /usr/include/mysql `Magick-config --cflags` `curl-config --cflags`
# -pipe - using all CPU cores
# -rdynamic - allow obtaining backtraces from within a program
# -g - Produce debugging information in the operating system's native format
# -ggdb - Produce debugging information for use by GDB.
# -O0 - turn off optimization to be able easily navigate incore dump
# -fvar-tracking-assignments: Annotate assignments to user variables early in the compilation and attempt to carry the annotations over throughout the compilation all the way to the end, in an attempt to improve debug information while optimizing.
# -fno-var-tracking-assignments - completely shutdown variable assignment tracking
# -fno-inline - improve compile time significantly (from 287 down to 109 secs)

# this is production line
#CPPFLAGS  				=	$(DEFINITIONS) -std=c++1y -Wall --param=max-vartrack-size=60000000 -g -ggdb -O0 -pipe $(INCDIR)
CPPFLAGS  				=	$(DEFINITIONS) -std=c++14 -Wall -fno-inline -g -ggdb -O0 -pipe $(INCDIR)
CFLAGS  				=	$(DEFINITIONS) -Wall -g -ggdb -O0  $(INCDIR)

DYNAMIC_LIBS 			=	`mysql_config --libs` `Magick++-config --libs` -lmaxminddb -lavformat -lavutil -lcrypto
STATIC_LIBS 			=
LDFLAGS					=	`Magick++-config --ldflags` -rdynamic -Wl,-Bstatic $(STATIC_LIBS) -Wl,-Bdynamic $(DYNAMIC_LIBS) 
COMMON_OBJS 			=	ccgi.o cvars.o cmysql.o crequest.o ccookie.o cexception.o cmail.o ctemplate.o cactivator.o csession.o cfiles.o cuser.o cstatistics.o utilities_common.o utilities_timecard1.o utilities2.o utilities1.o cvideoconverter.o c_bt.o c_float.o

# don't remove intermediate files
# otherwise during build process every .o file not in COMMON_OBJS will be removed as "intermediate"
# this will trigger rebuild all targets (including *.cpp) every single time
.PRECIOUS: %.c %.o

all: $(CGIDIR)/index.cgi $(CGIDIR)/approver.cgi $(CGIDIR)/agency.cgi $(CGIDIR)/subcontractor.cgi $(CGIDIR)/account.cgi $(CGIDIR)/avataruploader.cgi $(CGIDIR)/generalimageuploader.cgi $(CGIDIR)/imageuploader.cgi $(CGIDIR)/system.cgi $(CGIDIR)/ajax_anyrole_1.cgi $(CGIADMINDIR)/admin.cgi cron_daily cron_minute


$(CGIADMINDIR)/admin.cgi: admin.o  $(COMMON_OBJS)
	$(G++) -o $@ $< $(COMMON_OBJS) $(LDFLAGS)

cron_%: cron_%.o chtml.o $(COMMON_OBJS)
	$(G++) -o $@ $< chtml.o $(COMMON_OBJS) $(LDFLAGS) `curl-config --libs`

$(CGIDIR)/%.cgi: %.o $(COMMON_OBJS)
	$(G++) -o $@ $< $(COMMON_OBJS) $(LDFLAGS) 

# $(CGIDIR)/index.cgi: index.o chtml.o $(COMMON_OBJS)
# 	$(G++) -o $@ $< chtml.o $(COMMON_OBJS) $(LDFLAGS) `curl-config --libs`
	
# $(CGIDIR)/subcontractor.cgi: subcontractor.o $(COMMON_OBJS)
# 	$(G++) -o $@ $< $(COMMON_OBJS) $(LDFLAGS) 

# $(CGIDIR)/agency.cgi: agency.o $(COMMON_OBJS)
# 	$(G++) -o $@ $< $(COMMON_OBJS) $(LDFLAGS)

# $(CGIDIR)/approver.cgi: approver.o $(COMMON_OBJS)
# 	$(G++) -o $@ $< $(COMMON_OBJS) $(LDFLAGS)

# $(CGIDIR)/account.cgi: account.o $(COMMON_OBJS)
# 	$(G++) -o $@ $< $(COMMON_OBJS) $(LDFLAGS)

# $(CGIDIR)/avataruploader.cgi: avataruploader.o  $(COMMON_OBJS)
# 	$(G++) -o $@  $< $(COMMON_OBJS) $(LDFLAGS)

# $(CGIDIR)/generalimageuploader.cgi: generalimageuploader.o  $(COMMON_OBJS)
# 	$(G++) -o $@  $< $(COMMON_OBJS) $(LDFLAGS)

# $(CGIDIR)/imageuploader.cgi: imageuploader.o $(COMMON_OBJS)
# 	$(G++) -o $@ $< $(COMMON_OBJS) $(LDFLAGS)

# $(CGIDIR)/system.cgi: system.o $(COMMON_OBJS)
# 	$(G++) -o $@ $< $(COMMON_OBJS) $(LDFLAGS)

# $(CGIADMINDIR)/admin.cgi: admin.o  $(COMMON_OBJS)
# 	$(G++) -o $@ $< $(COMMON_OBJS) $(LDFLAGS)

# cron_minute: cron_minute.o $(COMMON_OBJS)
# 	$(G++) -o $@ $< $(COMMON_OBJS) $(LDFLAGS)

%.o: %.cpp include/*.h
	$(G++) -c $(CPPFLAGS) $< -o $@
# utilities_common.o: utilities_common.cpp include/utilities.h
# utilities1.o: utilities1.cpp include/utilities.h
# utilities2.o: utilities2.cpp include/utilities.h
# utilities_timecard1.o: utilities_timecard1.cpp include/utilities.h

# index.o: index.cpp include/*.h
# cron_daily.o: cron_daily.cpp include/*.h
# cron_minute.o: cron_minute.cpp include/*.h
# account.o: account.cpp include/*.h
# system.o: system.cpp include/*.h
# imageuploader.o: imageuploader.cpp include/*.h
# avataruploader.o: avataruploader.cpp include/*.h
# generalimageuploader.o: generalimageuploader.cpp include/*.h

# ccgi.o:	ccgi.cpp include/*.h
# admin.o: admin.cpp include/*.h
# cuser.o: cuser.cpp include/*.h
# clock.o: clock.cpp include/*.h
# cvars.o: cvars.cpp include/*.h
# cmail.o: cmail.cpp include/*.h
# chtml.o: chtml.cpp include/*.h
# subcontractor.o: subcontractor.cpp include/*.h
# agency.o: agency.cpp include/*.h
# approver.o: approver.cpp include/*.h
# cfiles.o: cfiles.cpp include/*.h
# cmysql.o: cmysql.cpp include/*.h
# ccookie.o: ccookie.cpp include/*.h
# crequest.o: crequest.cpp include/*.h
# csession.o: csession.cpp include/*.h
# ctemplate.o: ctemplate.cpp include/*.h
# cactivator.o: cactivator.cpp include/*.h
# cexception.o: cexception.cpp include/*.h
# cstatistics.o: cstatistics.cpp include/*.h
# cvideoconverter.o: cvideoconverter.cpp include/*.h
# c_float.o: c_float.cpp include/*.h
# c_bt.o: c_bt.cpp include/*.h

install:
	rm -rf $(SYSTEMDIR)
	mkdir $(SYSTEMDIR)
	mkdir $(SYSTEMDIR)/sbin
	mkdir $(SYSTEMDIR)/log
	cp -f ./cron_daily $(SYSTEMDIR)/sbin/
	cp -f ./cron_minute $(SYSTEMDIR)/sbin/
	cp -f ./supplemental/crontab_daily/health $(SYSTEMDIR)/sbin/
	cp -f ./supplemental/etc/cron.d/$(DOMAIN) /etc/cron.d/$(CRON_FNAME)
	chmod 770 $(SYSTEMDIR)/sbin/health

	echo $(TIMESTAMP) > $(SYSTEMDIR)/log/install_datetime

	service cron restart
	sleep 1
	ps -aux | grep cron

uninstall:
	rm -f $(CGIDIR)/*.cgi
	rm -f /etc/cron.d/$(CRON_FNAME)
	rm -rf $(SYSTEMDIR)

	service cron restart
	sleep 1
	ps -aux | grep cron

clean:
	rm -f ./*.o
	rm -f ./*.cgi
	rm -f ./cron_daily
	rm -f ./cron_minute
